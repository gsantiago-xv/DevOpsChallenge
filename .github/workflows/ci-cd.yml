name: Deploy Application WeatherForecast Dev

on:
  push:
    branches: [ development ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    #IN
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET 3.1.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x' 
    - name: Build
      run: cd src; dotnet build MyWebApp.sln -o publish
    - name: Test
      run: cd src; dotnet test --filter Method
    #FM

    #- uses: actions/checkout@v2
    #- uses: azure/docker-login@v1
    #  with:
    #    login-server: ${{ secrets.AZURE_REGISTRY_USERNAME }}.azurecr.io
    #    username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
    #    password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
    #- run: |
    #    cd src ; dotnet build MyWebApp.sln -o publish ; dotnet test --filter ClassName=MSTest.Project.ByAlphabeticalOrder || echo "ignorando erro - TEST MS"  
    #    docker build . -t ${{ secrets.AZURE_REGISTRY_USERNAME }}.azurecr.io/nibodocker-dev:${{ github.sha }}
    #    docker push ${{ secrets.AZURE_REGISTRY_USERNAME }}.azurecr.io/nibodocker-dev:${{ github.sha }} 

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
  
#    - uses: azure/webapps-deploy@v2
#      with:
#        app-name: 'nibodocker-dev'
#        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#        images: '${{ secrets.AZURE_REGISTRY_USERNAME }}.azurecr.io/nibodocker-dev:${{ github.sha }}'
